// This file is generated by Firebase Studio.
'use server';

/**
 * @fileOverview AI-powered inquiry categorization flow for leads based on moving distance and urgency.
 *
 * - categorizeInquiry - Categorizes customer inquiries based on moving distance and urgency.
 * - InquiryCategorizationInput - The input type for the categorizeInquiry function.
 * - InquiryCategorizationOutput - The return type for the categorizeInquiry function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const InquiryCategorizationInputSchema = z.object({
  movingDistance: z
    .enum(['local', 'longDistance'])
    .describe('The moving distance, either local or long distance.'),
  movingDate: z
    .string()
    .describe('The approximate moving date provided by the customer.'),
  contactInformationCompleteness: z
    .number()
    .describe(
      'A numerical value (0-1) representing how complete the customer contact information is. 1 means completely filled.'
    ),
});
export type InquiryCategorizationInput = z.infer<typeof InquiryCategorizationInputSchema>;

const InquiryCategorizationOutputSchema = z.object({
  category: z
    .enum(['localUrgent', 'localNonUrgent', 'longDistanceUrgent', 'longDistanceNonUrgent'])
    .describe(
      'The category of the inquiry based on moving distance and urgency. Urgency is determined based on the moving date.'
    ),
  urgencyScore: z
    .number()
    .describe(
      'A numerical score (0-1) representing the urgency of the move. Higher values indicate higher urgency, calculated based on the moving date.'
    ),
  reason: z.string().describe('Reasoning behind the category assignment.'),
});

export type InquiryCategorizationOutput = z.infer<typeof InquiryCategorizationOutputSchema>;

export async function categorizeInquiry(input: InquiryCategorizationInput): Promise<InquiryCategorizationOutput> {
  return categorizeInquiryFlow(input);
}

const prompt = ai.definePrompt({
  name: 'inquiryCategorizationPrompt',
  input: {schema: InquiryCategorizationInputSchema},
  output: {schema: InquiryCategorizationOutputSchema},
  prompt: `You are an expert lead categorization AI.

You will categorize customer inquiries based on their moving distance (local or long distance) and urgency.
Urgency is determined based on the moving date provided by the customer.

Here's the information about the inquiry:

Moving Distance: {{{movingDistance}}}
Moving Date: {{{movingDate}}}
Contact Information Completeness: {{{contactInformationCompleteness}}}

Based on this information, categorize the inquiry into one of the following categories:
- localUrgent
- localNonUrgent
- longDistanceUrgent
- longDistanceNonUrgent

Also, provide an urgency score between 0 and 1, where 1 is the most urgent.

Explain your reasoning for the category assignment and urgency score.

Output in JSON format:
{
  "category": "<category>",
  "urgencyScore": <urgency_score>,
  "reason": "<reason>"
}
`,
});

const categorizeInquiryFlow = ai.defineFlow(
  {
    name: 'categorizeInquiryFlow',
    inputSchema: InquiryCategorizationInputSchema,
    outputSchema: InquiryCategorizationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
